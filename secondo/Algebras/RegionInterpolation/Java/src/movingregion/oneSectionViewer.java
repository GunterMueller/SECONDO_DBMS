/*
 * oneSectionViewer.java
 *
 * Created on 15. Juli 2007, 11:25
 */

package movingregion;
import java.awt.*;

public class oneSectionViewer extends javax.swing.JPanel
{
    
    mLineRep myTri;
    int time;
    int of;
    int hei;
    int wid;
    int maxX,maxY,minX,minY;
    
    public oneSectionViewer(mLineRep myTri,int time, int of)
    {
        maxX=0;
        maxY=0;
        minX=Integer.MAX_VALUE;
        minY=Integer.MAX_VALUE;
        this.myTri=myTri;
        this.time=time;
        this.of=of;
        
        for(int i=0;i<myTri.myMatch.getSource().getNrOfFaces();i++)
        {
            LineWA[] tmp=myTri.myMatch.getSource().getFace(i).getCycle().getOutLine();
            for(int j=0;j<tmp.length;j++)
            {
                if(tmp[j].x>maxX)   maxX=tmp[j].x;
                if(tmp[j].y>maxY)   maxY=tmp[j].y;
                if(tmp[j].x<minX)   minX=tmp[j].x;
                if(tmp[j].y<minY)   minY=tmp[j].y;
            }
        }
        
        for(int i=0;i<myTri.myMatch.getTarget().getNrOfFaces();i++)
        {
            LineWA[] tmp=myTri.myMatch.getTarget().getFace(i).getCycle().getOutLine();
            for(int j=0;j<tmp.length;j++)
            {
                if(tmp[j].x>maxX)   maxX=tmp[j].x;
                if(tmp[j].y>maxY)   maxY=tmp[j].y;
                if(tmp[j].x<minX)   minX=tmp[j].x;
                if(tmp[j].y<minY)   minY=tmp[j].y;
            }
        }
    }
    
    public void paint(Graphics g)
    {                
        g.setColor(Color.WHITE);
        g.fillRect(0,0,this.getWidth(),this.getHeight());        
        g.setColor(Color.BLACK);
        g.drawRect(0,0,this.getWidth(),this.getHeight());        
        g.setColor(Color.BLUE);
        LineWA[][] lines=myTri.getSection(time*1.0/of);        
        double scaleX=wid/((maxX-minX)*1.0);
        double scaleY=hei/((maxY-minY)*1.0);                                        
        for(int i=0;i<lines.length;i++)
        {
            g.drawLine((int)((lines[i][0].x-minX)*scaleX),(int)((lines[i][0].y-minY)*scaleY),(int)((lines[i][1].x-minX)*scaleX),(int)((lines[i][1].y-minY)*scaleY));
        }
    }
    
    public void setHei(int height)
    {
        hei=height;
    }
    
    public void setWid(int width)
    {
        wid=width;
    }
    public Dimension getPreferredSize()
    {
        return(new Dimension(wid,hei));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setLayout(new java.awt.GridLayout());

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public Dimension getMinimumSize()
    {
         return(new Dimension(wid,hei));
    }
    
    
}
